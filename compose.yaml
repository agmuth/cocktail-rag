version: '3.8'

services:

  ui:
    build:
      context: ./
      dockerfile:  Dockerfile-ui
    container_name: ${UI_HOST}
    command: poetry run streamlit run src/ui/main.py --server.port ${UI_PORT}
    # entrypoint: ["tail", "-f", "/dev/null"]
    env_file:
      - .env
    ports:
      - ${UI_PORT}:${UI_PORT}
    depends_on:
      - api


  api:
    build:
      context: ./
      dockerfile:  Dockerfile-api
    container_name: ${API_HOST}
    command: poetry run fastapi run src/api/main.py --port ${API_PORT}
    env_file:
      - .env
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - ollama
      - qdrant
      - mongo
      
  
  ollama:
    image: ollama/ollama:latest
    container_name: ${OLLAMA_HOST}
    restart: always
    tty: true
    environment:
      - OLLAMA_LLM=${OLLAMA_LLM}
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]
    ports:
        - ${OLLAMA_PORT}:${OLLAMA_PORT}
    volumes:
        - ollama:/root/.ollama:/root/.ollama
        - ./ollama-entrypoint.sh:/entrypoint.sh
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu"]
            count: all
   

  qdrant:
    image: qdrant/qdrant:latest
    container_name: ${QDRANT_HOST}
    restart: always
    tty: true
    ports:
      - ${QDRANT_PORT}:${QDRANT_PORT}
    volumes:
      - qdrant_storage:/qdrant/storage

  
  mongo:
    image: mongo:latest
    container_name: ${MONGO_HOST}
    restart: always
    tty: true
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongo_data_db:/data/db


  mongo-express:
    image: mongo-express:latest
    restart: always
    tty: true
    ports:
      - ${MONGOEXPRESS_PORT}:${MONGOEXPRESS_PORT}
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_HOST}:${MONGO_PORT}/
      - ME_CONFIG_BASICAUTH=false
    depends_on: 
      - mongo

volumes:
  qdrant_storage:
    driver: local
  mongo_data_db:
    driver: local
  ollama:
    driver: local